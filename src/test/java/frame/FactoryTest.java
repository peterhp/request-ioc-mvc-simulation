package frame;

import frame.annotation.Autowired;
import frame.annotation.Service;
import frame.factory.BeanFactory;
import org.junit.Test;

import java.util.Arrays;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertThat;

/**
 * Created by Shli on 06/08/2017.
 */
public class FactoryTest {

    public static class AutoGeneratedClass {}

    public interface IFTest {}
    @Service
    public static class IFImpl implements IFTest {}

    public static class IFInject {
        private IFTest iftest = null;
        @Autowired
        public void setIftest(IFTest iftest) {
            this.iftest = iftest;
        }
        public IFTest getIftest() {
            return iftest;
        }
    }

    @Test
    public void should_get_singleton_for_normal_class_without_injection() throws Exception {
        // given
        BeanFactory factory = new BeanFactory(Arrays.asList());

        // when
        Object obj1 = factory.getBean(AutoGeneratedClass.class);
        Object obj2 = factory.getBean(AutoGeneratedClass.class);

        // then
        assertThat(obj1, is(obj2));
        assertNotNull(obj1);
    }

    @Test
    public void should_get_instance_with_injection() throws Exception {
        // given
        BeanFactory factory = new BeanFactory(
                Arrays.asList(AutoGeneratedClass.class, IFImpl.class, IFInject.class));

        // when
        IFInject ifInject = (IFInject) factory.getBean(IFInject.class);

        // then
        assertNotNull(ifInject);
        assertNotNull(ifInject.getIftest());
    }
}
